
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { DATABASE_CONFIG } from '@/config/database';

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(DATABASE_CONFIG.url, DATABASE_CONFIG.key);

// Default restaurant ID to use throughout the application
export const DEFAULT_RESTAURANT_ID = "d2d5278d-8df1-4819-87a0-f23b519e3f2a";

// Helper functions for common operations
export const supabaseOperations = {
  // Test connection
  async testConnection() {
    try {
      const { data, error } = await supabase.from('Restaurant').select('id').limit(1);
      return { success: !error, error };
    } catch (error) {
      return { success: false, error };
    }
  },

  // Get restaurants
  async getRestaurants() {
    try {
      const { data, error } = await supabase
        .from('Restaurant')
        .select('*')
        .order('createdAt', { ascending: false });
      
      return { data, error };
    } catch (error) {
      console.error('Error fetching restaurants:', error);
      return { data: null, error };
    }
  },

  // Get categories
  async getCategories() {
    try {
      const { data, error } = await supabase
        .from('MenuCategory')
        .select('*, Restaurant(name)')
        .order('name', { ascending: true });
      
      return { data, error };
    } catch (error) {
      console.error('Error fetching categories:', error);
      return { data: null, error };
    }
  },

  // Get products
  async getProducts() {
    try {
      const { data, error } = await supabase
        .from('Product')
        .select('*, MenuCategory(name), Restaurant(name)')
        .order('createdAt', { ascending: false });
      
      return { data, error };
    } catch (error) {
      console.error('Error fetching products:', error);
      return { data: null, error };
    }
  },

  // Get orders
  async getOrders() {
    try {
      const { data, error } = await supabase
        .from('Order')
        .select('*, OrderProduct(*, Product(name, price)), Restaurant(name)')
        .order('createdAt', { ascending: false });
      
      return { data, error };
    } catch (error) {
      console.error('Error fetching orders:', error);
      return { data: null, error };
    }
  },

  // Get accounts receivable
  async getAccountsReceivable() {
    try {
      const { data, error } = await supabase
        .from('AccountsReceivable')
        .select('*, Restaurant(name)')
        .order('createdAt', { ascending: false });
      
      return { data, error };
    } catch (error) {
      console.error('Error fetching accounts receivable:', error);
      return { data: null, error };
    }
  },

  // Get accounts payable
  async getAccountsPayable() {
    try {
      const { data, error } = await supabase
        .from('AccountsPayable')
        .select('*, Restaurant(name)')
        .order('createdAt', { ascending: false });
      
      return { data, error };
    } catch (error) {
      console.error('Error fetching accounts payable:', error);
      return { data: null, error };
    }
  }
};
